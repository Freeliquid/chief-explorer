{"version":3,"sources":["web3.js","notify.js","helpers.js","App.js","registerServiceWorker.js","index.js","makerdao.svg"],"names":["web3","Web3","Item","displayName","hideNotification","props","id","React","createElement","className","this","theme","onClick","title","msg","Component","ReactNotify","key","getInitialState","success","time","addNotify","error","info","state","setState","countToHide","duration","that","setTimeout","keys","Object","hide","el","map","toBigNumber","toWei","formatNumber","number","decimals","isWei","BigNumber","config","ROUNDING_MODE","object","fromWei","round","d","pow","mul","trunc","div","toFixed","valueOf","parts","toString","split","replace","copyToClipboard","e","value","target","aux","document","setAttribute","body","appendChild","select","execCommand","removeChild","alert","printNumber","etherscanUrl","network","etherscanAddress","text","address","href","rel","etherscanTx","tx","etherscanToken","token","holder","dschief","require","dstoken","dsspell","settings","chiefContract","eth","contract","abi","tokenContract","spellContract","window","l","console","log","App","gov","iou","chief","slates","candidates","loaded","myVote","GOVBalance","GOVAllowance","IOUBalance","IOUAllowance","max_yays","hat","hatSpell","checkNetwork","version","getNode","isConnected","getBlock","res","debug","latestBlock","networkState","Date","getTime","timestamp","hash","initNetwork","newNetwork","initContract","checkAccounts","getAccounts","accounts","defaultAccount","isAddress","getBalance","r","reset","initialState","a","async","chain","localStorage","getItem","chiefObj","at","getToken","govObj","iouObj","getGOVBalance","getGOVAllowance","getIOUBalance","getIOUAllowance","getMyVote","getMaxYays","getHat","getSlates","then","LogNote","sig","methodSig","fromBlock","extractSlateAddresses","logTransactionConfirmed","transactionHash","reloadApprovals","checkPendingTransactionsInterval","setInterval","checkPendingTransactions","_getSlates","Promise","resolve","reject","blocksToFetch","blockGap","push","all","toBlock","get","catch","_slates","flat","i","length","getApprovals","data","addressesString","args","fax","substring","addresses","slateHashAddress","sha3","encoding","method","getContractABIFromEtherscan","url","xhr","XMLHttpRequest","open","onreadystatechange","readyState","status","response","JSON","parse","responseText","send","executeCallback","shift","transactions","pending","getTransactionReceipt","logs","logTransactionFailed","blockNumber","logRequestTransaction","refs","notificator","logPendingTransaction","callback","msgTemp","logTransactionRejected","getApproval","candidate","approvals","promises","balanceOf","allowance","deposits","reloadBalances","reloadVotes","votes","MAX_YAYS","getValueHatSpell","field","r2","r3","result","forEach","name","inputs","val","type","join","loadCustomChief","preventDefault","chiefAddress","setItem","clearCustomChief","deploy","govAddress","deployToken","deployChief","setOwnership","checkDeployedAddress","checkDeployAddress","contractAddress","clearInterval","symbol","Math","random","toAscii","new","bytecode","gas","max","setOwner","setAllowance","getAttribute","approve","toUpperCase","lockFree","methodLF","amount","lt","voteSlate","slate","vote","bytes32","createSlate","methodVE","sort","liftCandidate","lift","renderChiefData","hatSpellParams","input","eq","minus","data-token","data-value","ref","lockFreeForm","onSubmit","step","placeholder","style","width","marginBottom","whom","mana","done","b","textAlign","gt","data-address","color","data-slate","createSlateForm","ethereum","enable","setProvider","currentProvider","providers","HttpProvider","checkAccountsInterval","checkNetworkInterval","src","logo","alt","fontWeight","deployForm","loadForm","Boolean","location","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister","module","exports"],"mappings":"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","file":"static/js/main.72216c80.chunk.js","sourcesContent":["import Web3 from 'web3';\n\nconst web3 = new Web3();\n\nexport default web3;\n\nconst initWeb3 = async web3 => {\n  return new Promise(async (resolve, reject) => {\n    try {\n      if (window.web3 || window.ethereum) {\n        if (window.ethereum) {\n          await window.ethereum.enable();\n          web3.setProvider(window.ethereum);\n        } else {\n          web3.setProvider(window.web3.currentProvider);\n        }\n      } else {\n        web3.setProvider(new Web3.providers.HttpProvider('http://localhost:8545'));\n      }\n      window.web3 = web3;\n      resolve(true);\n    } catch (e) {\n      reject(e);\n    }\n  });\n}\n\nexport { initWeb3 };\n","import React, { Component } from 'react';\n\nclass Item extends Component {\n  displayName = \"Item\";\n\n  hideNotification = () => {\n    this.props.hideNotification(this.props.id);\n  }\n\n  render() {\n    return (\n      React.createElement(\"div\", { className: \"notify-item \" + this.props.theme, onClick: this.hideNotification },\n        React.createElement(\"p\", { className: \"notify-title\" }, this.props.title),\n\n        React.createElement(\"p\", { className: \"notify-body\" }, this.props.msg)\n      )\n    )\n  }\n}\n\nclass ReactNotify extends Component {\n  displayName = \"Notify\";\n  key = 0;\n\n  constructor() {\n    super();\n    this.state = this.getInitialState();\n  }\n\n  getInitialState = () => {\n    return {};\n  }\n\n  success = (key, title, msg, time) => {\n    this.addNotify(key, title, msg, time, 'success');\n  }\n\n  error = (key, title, msg, time) => {\n    this.addNotify(key, title, msg, time, 'error');\n  }\n\n  info = (key, title, msg, time) => {\n    this.addNotify(key, title, msg, time, 'info');\n  }\n\n  addNotify = (key, title, msg, time, theme) => {\n    const state = {...this.state}\n    state[key] = { title: title, msg: msg, time: time, theme: theme };\n    this.setState(state);\n    this.countToHide(time, key);\n  }\n\n  countToHide = (duration, key) => {\n    if (duration) {\n      var that = this;\n      setTimeout(function () {\n        that.hideNotification(key);\n      }, duration);\n    }\n  }\n\n  hideNotification = (key) => {\n    delete this.state[key];\n    this.setState(this.state);\n  }\n\n  render() {\n    var keys = Object.keys(this.state);\n    var state = this.state;\n    var hide = this.hideNotification;\n    var el = keys.map(function (key) {\n      return React.createElement(Item, {\n        id: key,\n        key: key,\n        theme: state[key].theme,\n        hideNotification: hide,\n        title: state[key].title,\n        msg: state[key].msg\n      }\n      )\n    });\n    return (React.createElement(\"div\", { className: \"notify-container\" }, el));\n  }\n}\n\nexport default ReactNotify;\n","import React from 'react';\nimport web3 from './web3';\n\nexport const WAD = web3.toBigNumber(web3.toWei(1));\n\nvar padLeft = function (string, chars, sign) {\n  return new Array(chars - string.length + 1).join(sign ? sign : \"0\") + string;\n};\n\nexport function toBytes32(x) {\n  let y = web3.toHex(x);\n  y = y.replace('0x', '');\n  y = padLeft(y, 64);\n  y = '0x' + y;\n  return y;\n}\n\nexport function toBytes12(x) {\n  let y = web3.toHex(x);\n  y = y.replace('0x', '');\n  y = padLeft(y, 24);\n  y = '0x' + y;\n  return y;\n}\n\nexport function formatNumber(number, decimals = false, isWei = true) {\n  web3.BigNumber.config({ ROUNDING_MODE: 4 });\n\n  let object = web3.toBigNumber(number);\n\n  if (isWei) object = web3.fromWei(object.round(0));\n\n  if (decimals) {\n    const d = web3.toBigNumber(10).pow(decimals);\n    object = object.mul(d).trunc().div(d).toFixed(decimals);\n  } else {\n    object = object.valueOf();\n  }\n\n  const parts = object.toString().split('.');\n  return parts[0].replace(/\\B(?=(\\d{3})+(?!\\d))/g, ',') + (parts[1] ? `.${parts[1]}` : '');\n}\n\nexport function formatDate(timestamp) {\n  const date = new Date(timestamp * 1000);\n  return `${date.toDateString()} ${addZero(date.getHours())}:${addZero(date.getMinutes())}:${addZero(date.getSeconds())}`;\n}\n\nfunction addZero(value) {\n  return value > 9 ? value: `0${value}`;\n}\n\nexport function fromRaytoWad(x) {\n  const y = web3.toBigNumber(x).div(web3.toBigNumber(10).pow(9))\n  return y;\n}\n\nexport function copyToClipboard(e) {\n  const value = e.target.title.replace(',', '');\n  var aux = document.createElement(\"input\");\n  aux.setAttribute('value', value);\n  document.body.appendChild(aux);\n  aux.select();\n  document.execCommand(\"copy\");\n  document.body.removeChild(aux);\n  alert(`Value: \"${value}\" copied to clipboard`);\n}\n\nexport function printNumber(number) {\n  return <span className=\"printedNumber\" onClick={ copyToClipboard } title={ formatNumber(number, 18) }>{ formatNumber(number, 3) }</span>\n}\n\n// Multiply WAD values\nexport function wmul(a, b) {\n  return a.times(b).div(WAD);\n}\n\n//Divide WAD values\nexport function wdiv(a, b) {\n  return a.times(WAD).div(b);\n}\n\nfunction etherscanUrl(network) {\n  return `https://${ network !== 'main' ? `${network}.` : '' }etherscan.io`;\n}\n\nexport function etherscanAddress(network, text, address) {\n  return <a href={ `${etherscanUrl(network)}/address/${address}` } target=\"_blank\" rel=\"noopener noreferrer\">{ text }</a>\n}\n\nexport function etherscanTx(network, text, tx) {\n  return <a href={ `${etherscanUrl(network)}/tx/${tx}` } target=\"_blank\" rel=\"noopener noreferrer\">{ text }</a>\n}\n\nexport function etherscanToken(network, text, token, holder = false) {\n  return <a href={ `${etherscanUrl(network)}/token/${token}${holder ? `?a=${holder}` : ''}` } target=\"_blank\" rel=\"noopener noreferrer\">{ text }</a>\n}\n","import React, { Component } from 'react';\nimport './App.css';\nimport web3, { initWeb3 } from './web3';\nimport ReactNotify from './notify';\nimport { printNumber, etherscanTx, etherscanAddress, etherscanToken } from './helpers';\nimport logo from './makerdao.svg';\n\nvar dschief = require('./abi/dschief.json');\nvar dstoken = require('./abi/dstoken.json');\nvar dsspell = require('./abi/dsspell.json');\nvar settings = require('./settings.json');\nvar chiefContract = web3.eth.contract(dschief.abi);\nvar tokenContract = web3.eth.contract(dstoken.abi);\nvar spellContract = web3.eth.contract(dsspell.abi);\nwindow.dschief = dschief;\nwindow.dstoken = dstoken;\nwindow.chiefContract = chiefContract;\nwindow.tokenContract = tokenContract;\nwindow.spellContract = spellContract;\nwindow.l = console.log;\n\nclass App extends Component {\n  constructor() {\n    super();\n    const initialState = this.getInitialState();\n    this.state = {\n      ...initialState,\n      transactions: {},\n      network: {},\n    }\n  }\n\n  getInitialState = () => {\n    return {\n      gov: null,\n      iou: null,\n      chief: null,\n      slates: [],\n      candidates: {},\n      loaded: false,\n      myVote: null,\n      GOVBalance: web3.toBigNumber(-1),\n      GOVAllowance: web3.toBigNumber(-1),\n      IOUBalance: web3.toBigNumber(-1),\n      IOUAllowance: web3.toBigNumber(-1),\n      max_yays: web3.toBigNumber(-1),\n      hat: null,\n      hatSpell: {}\n    };\n  }\n\n  checkNetwork = () => {\n    web3.version.getNode((error) => {\n      const isConnected = !error;\n\n      // Check if we are synced\n      if (isConnected) {\n        web3.eth.getBlock('latest', (e, res) => {\n          if (typeof(res) === 'undefined') {\n            console.debug('YIKES! getBlock returned undefined!');\n          }\n          if (res.number >= this.state.network.latestBlock) {\n            const networkState = { ...this.state.network };\n            networkState['latestBlock'] = res.number;\n            networkState['outOfSync'] = e != null || ((new Date().getTime() / 1000) - res.timestamp) > 600;\n            this.setState({ network: networkState });\n          } else {\n            // XXX MetaMask frequently returns old blocks\n            // https://github.com/MetaMask/metamask-plugin/issues/504\n            console.debug('Skipping old block');\n          }\n        });\n      }\n\n      // Check which network are we connected to\n      // https://github.com/ethereum/meteor-dapp-wallet/blob/90ad8148d042ef7c28610115e97acfa6449442e3/app/client/lib/ethereum/walletInterface.js#L32-L46\n      if (this.state.network.isConnected !== isConnected) {\n        if (isConnected === true) {\n          web3.eth.getBlock(0, (e, res) => {\n            let network = false;\n            if (!e) {\n              switch (res.hash) {\n                case '0xa3c565fc15c7478862d50ccd6561e3c06b24cc509bf388941c25ea985ce32cb9':\n                  network = 'kovan';\n                  break;\n                case '0xd4e56740f876aef8c010b86a40d5f56745a118d0906a34e69aec8c0db1cb8fa3':\n                  network = 'main';\n                  break;\n                default:\n                  console.log('setting network to private');\n                  console.log('res.hash:', res.hash);\n                  network = 'private';\n              }\n            }\n            if (this.state.network.network !== network) {\n              this.initNetwork(network);\n            }\n          });\n        } else {\n          const networkState = { ...this.state.network };\n          networkState['isConnected'] = isConnected;\n          networkState['network'] = false;\n          networkState['latestBlock'] = 0;\n          this.setState({ network: networkState });\n        }\n      }\n    });\n  }\n\n  initNetwork = (newNetwork) => {\n    //checkAccounts();\n    const networkState = { ...this.state.network };\n    networkState['network'] = newNetwork;\n    networkState['isConnected'] = true;\n    networkState['latestBlock'] = 0;\n    this.setState({ network: networkState }, () => {\n      this.initContract();\n    });\n  }\n\n  checkAccounts = () => {\n    web3.eth.getAccounts((error, accounts) => {\n      if (!error) {\n        const networkState = { ...this.state.network };\n        networkState['accounts'] = accounts;\n        networkState['defaultAccount'] = accounts[0];\n        web3.eth.defaultAccount = networkState['defaultAccount'];\n        this.setState({ network: networkState }, () => {\n          if (web3.isAddress(this.state.network.defaultAccount)) {\n            web3.eth.getBalance(this.state.network.defaultAccount, (e, r) => {\n              const networkState = { ...this.state.network };\n              networkState['accountBalance'] = r;\n              this.setState({ network: networkState });\n            });\n          }\n        });\n      }\n    });\n  }\n\n  componentDidMount() {\n    setTimeout(() => {\n      initWeb3(web3).then(() => {\n        window.web3 = web3;\n        this.checkNetwork();\n        this.checkAccounts();\n        this.checkAccountsInterval = setInterval(this.checkAccounts, 10000);\n        this.checkNetworkInterval = setInterval(this.checkNetwork, 3000);\n      }, e => {\n        alert(e);\n      });\n    }, 500);\n  }\n\n  initContract = () => {\n    web3.reset(true);\n    const initialState = this.getInitialState();\n    this.setState({\n      ...initialState\n    }, async () => {\n      const chief = this.state.network.network === 'main' ?\n        settings.chain[this.state.network.network].chief :\n        (window.localStorage.getItem('chief') || settings.chain[this.state.network.network].chief);\n      if (chief  && web3.isAddress(chief)) {\n        window.chiefObj = this.chiefObj = chiefContract.at(chief);\n        const gov = await this.getToken('GOV');\n        const iou = await this.getToken('IOU');\n        if (gov && iou && web3.isAddress(gov) && web3.isAddress(iou)) {\n          window.govObj = this.govObj = tokenContract.at(gov);\n          window.iouObj = this.iouObj = tokenContract.at(iou);\n          this.getGOVBalance();\n          this.getGOVAllowance();\n          this.getIOUBalance();\n          this.getIOUAllowance();\n          this.getMyVote();\n          this.getMaxYays();\n          this.getHat();\n          this.setState({ gov, iou, chief }, () => {\n            this.getSlates().then(() => {\n              this.chiefObj.LogNote({ sig: [this.methodSig('etch(address[])'), this.methodSig('vote(address[])')] }, { fromBlock: 'latest' }, (e, r) => {\n                this.extractSlateAddresses(r);\n                this.getMyVote();\n              });\n            });\n          });\n          this.chiefObj.LogNote({ sig: this.methodSig('lift(address)') }, { fromBlock: 'latest' }, (e, r) => {\n            this.getHat();\n            this.logTransactionConfirmed(r.transactionHash);\n          });\n          this.chiefObj.LogNote({ sig: this.methodSig('vote(bytes32)') }, { fromBlock: 'latest' }, (e, r) => {\n            this.getMyVote();\n            this.reloadApprovals();\n            this.logTransactionConfirmed(r.transactionHash);\n          });\n          this.chiefObj.LogNote({ sig: [this.methodSig('lock(uint128)'), this.methodSig('free(uint128)')] }, { fromBlock: 'latest' }, (e, r) => {\n            this.getIOUBalance();\n            this.getIOUAllowance();\n            this.reloadApprovals();\n          });\n          this.govObj.LogNote({ sig: [this.methodSig('transfer(address,uint256)'),\n                                      this.methodSig('transferFrom(address,address,uint256)'),\n                                      this.methodSig('approve(address,uint256)'),\n                                      this.methodSig('push(address,uint128)'),\n                                      this.methodSig('pull(address,uint128)'),\n                                      this.methodSig('mint(uint128)'),\n                                      this.methodSig('burn(uint128)')] }, { fromBlock: 'latest' }, (e, r) => {\n            this.getGOVBalance();\n            this.getGOVAllowance();\n            this.logTransactionConfirmed(r.transactionHash);\n          });\n          this.iouObj.LogNote({ sig: this.methodSig('approve(address,uint256)') }, { fromBlock: 'latest' }, (e, r) => {\n            this.getIOUAllowance();\n            this.logTransactionConfirmed(r.transactionHash);\n          });\n          // This is necessary to finish transactions that failed after signing\n          this.checkPendingTransactionsInterval = setInterval(this.checkPendingTransactions, 10000);\n        }\n      }\n    });\n  }\n\n  _getSlates = () => {\n    return new Promise((resolve, reject) => {\n      web3.eth.getBlock('latest', async (e, r) => {\n        if (e) console.log(\"failed to fetch block number\");\n        else {\n          const latestBlock = r.number;\n          const blockGap = 10000;\n          const blocksToFetch = [];\n          for (let fromBlock = 0; fromBlock < latestBlock; fromBlock += (blockGap + 1)) {\n            blocksToFetch.push([fromBlock, fromBlock + blockGap]);\n          }\n          const _slates = await Promise.all(blocksToFetch.map(([fromBlock, toBlock]) =>\n            new Promise((resolve, reject) => {\n              this.chiefObj.LogNote({ sig: [this.methodSig('etch(address[])'), this.methodSig('vote(address[])')] }, { fromBlock, toBlock }).get(async (e, r) => {\n                if (e) reject(e);\n                resolve(r);\n              });\n            })\n          )).catch(e => reject(e));\n          resolve(_slates.flat());\n        }\n      })\n    })\n  }\n\n  getSlates = () => {\n    return new Promise((resolve, reject) => {\n      this._getSlates().then(async r => {\n        const candidates = {};\n        const slates = {};\n        for (let i = 0; i < r.length; i++) {\n          this.extractSlateAddresses(r[i], candidates, slates);\n        }\n        this.getMyVote();\n        await this.getApprovals(candidates);\n        this.setState(() => {\n          return {candidates, slates, loaded: true}\n        }, () => {\n          resolve(true);\n        });\n      }).catch(reject);\n    });\n  }\n\n  extractSlateAddresses = (data, candidates, slates) => {\n    const addressesString = data.args.fax.substring(data.args.sig === this.methodSig('vote(address[],address)') ? 202 : 138);\n    const addresses = [];\n    let slateHashAddress = '';\n    for (let i = 0; i < addressesString.length / 64; i++) {\n      const address = `0x${addressesString.substring(i * 64 + 24, (i + 1) * 64)}`;\n      candidates[address] = typeof candidates[address] !== 'undefined' ? candidates[address] : web3.toBigNumber(0);\n      addresses.push(address);\n      slateHashAddress += addressesString.substring(i * 64, (i + 1) * 64);\n    }\n    slates[web3.sha3(slateHashAddress, { encoding: 'hex' })] = addresses;\n    return { candidates, slates };\n  }\n\n  methodSig = (method) => {\n    return web3.sha3(method).substring(0, 10)\n  }\n\n  getContractABIFromEtherscan = address => {\n    return new Promise((resolve, reject) => {\n      const url = `https://api${this.state.network.network !== 'main' ? `-${this.state.network.network}` : ''}.etherscan.io/api?module=contract&action=getabi&address=${address}`;\n      const xhr = new XMLHttpRequest();\n      xhr.open('GET', url, true);\n      xhr.onreadystatechange = () => {\n        if (xhr.readyState === 4 && xhr.status === 200) {\n          const response = JSON.parse(xhr.responseText);\n          resolve(response);\n        } else if (xhr.readyState === 4 && xhr.status !== 200) {\n          reject(xhr.status);\n        }\n      }\n      xhr.send();\n    })\n  }\n\n  executeCallback = args => {\n    const method = args.shift();\n    this[method](...args);\n  }\n\n  // Transactions\n  checkPendingTransactions = () => {\n    const transactions = { ...this.state.transactions };\n    Object.keys(transactions).map(tx => {\n      if (transactions[tx].pending) {\n        web3.eth.getTransactionReceipt(tx, (e, r) => {\n          if (!e && r !== null) {\n            if (r.logs.length === 0) {\n              this.logTransactionFailed(tx);\n            } else if (r.blockNumber)  {\n              this.logTransactionConfirmed(tx);\n            }\n          }\n        });\n      }\n      return false;\n    });\n  }\n\n  logRequestTransaction = (id, title) => {\n    const msgTemp = 'Waiting for transaction signature...';\n    this.refs.notificator.info(id, title, msgTemp, false);\n  }\n\n  logPendingTransaction = (id, tx, title, callback = []) => {\n    const msgTemp = 'Transaction TX was created. Waiting for confirmation...';\n    const transactions = { ...this.state.transactions };\n    transactions[tx] = { pending: true, title, callback }\n    this.setState({ transactions });\n    console.log(msgTemp.replace('TX', tx));\n    this.refs.notificator.hideNotification(id);\n    this.refs.notificator.info(tx, title, etherscanTx(this.state.network.network, msgTemp.replace('TX', `${tx.substring(0,10)}...`), tx), false);\n  }\n\n  logTransactionConfirmed = tx => {\n    const msgTemp = 'Transaction TX was confirmed.';\n    const transactions = { ...this.state.transactions };\n    if (transactions[tx] && transactions[tx].pending) {\n      transactions[tx].pending = false;\n      this.setState({ transactions }, () => {\n        console.log(msgTemp.replace('TX', tx));\n        this.refs.notificator.hideNotification(tx);\n        this.refs.notificator.success(tx, transactions[tx].title, etherscanTx(this.state.network.network, msgTemp.replace('TX', `${tx.substring(0,10)}...`), tx), 4000);\n        if (transactions[tx].callback.length > 0) {\n          this.executeCallback(transactions[tx].callback);\n        }\n      });\n    }\n  }\n\n  logTransactionFailed = tx => {\n    const msgTemp = 'Transaction TX failed.';\n    const transactions = { ...this.state.transactions };\n    if (transactions[tx]) {\n      transactions[tx].pending = false;\n      this.setState({ transactions });\n      this.refs.notificator.error(tx, transactions[tx].title, msgTemp.replace('TX', `${tx.substring(0,10)}...`), 4000);\n    }\n  }\n\n  logTransactionRejected = (tx, title) => {\n    const msgTemp = 'User denied transaction signature.';\n    this.refs.notificator.error(tx, title, msgTemp, 4000);\n  }\n  //\n\n  // Getters\n  getToken = (token) => {\n    return new Promise((resolve, reject) => {\n      this.chiefObj[token]((e, r) => {\n        if (!e) {\n          resolve(r);\n        } else {\n          reject(e);\n        }\n      });\n    })\n  }\n\n  getApproval = (candidate) => {\n    return new Promise((resolve, reject) => {\n      this.chiefObj.approvals(candidate, (e, r) => {\n        if (!e) {\n          resolve(r);\n        } else {\n          reject(e);\n        }\n      });\n    })\n  }\n\n  getApprovals = (candidates) => {\n    return new Promise(resolve => {\n      const promises = [];\n      Object.keys(candidates).map(key => promises.push(this.getApproval(key)));\n      Promise.all(promises).then(r => {\n        let i = 0;\n        Object.keys(candidates).map(key => {\n          candidates[key] = r[i];\n          i ++;\n          return true;\n        });\n        resolve(true);\n      });\n    });\n  }\n\n  getGOVBalance = () => {\n    this.govObj.balanceOf(this.state.network.defaultAccount, (e, r) => {\n      if (!e) {\n        this.setState({ GOVBalance: r })\n      }\n    });\n  }\n\n  getGOVAllowance = () => {\n    this.govObj.allowance(this.state.network.defaultAccount, this.chiefObj.address, (e, r) => {\n      if (!e) {\n        this.setState({ GOVAllowance: r })\n      }\n    });\n  }\n\n  getIOUBalance = () => {\n    this.chiefObj.deposits(this.state.network.defaultAccount, (e, r) => {\n      if (!e) {\n        this.setState({ IOUBalance: r })\n      }\n    });\n  }\n\n  getIOUAllowance = () => {\n    this.iouObj.allowance(this.state.network.defaultAccount, this.chiefObj.address, (e, r) => {\n      if (!e) {\n        this.setState({ IOUAllowance: r })\n      }\n    });\n  }\n\n  reloadBalances = () => {\n    this.getGOVBalance();\n    this.getIOUBalance();\n  }\n\n  reloadApprovals = () => {\n    const candidates = { ...this.state.candidates };\n    this.getApprovals(candidates);\n    this.setState({ candidates });\n  }\n\n  reloadVotes = () => {\n    this.getMyVote();\n    this.reloadApprovals();\n  }\n\n  getMyVote = () => {\n    this.chiefObj.votes(this.state.network.defaultAccount, (e, r) => {\n      if (!e) {\n        this.setState({ myVote: r })\n      }\n    });\n  }\n\n  getMaxYays = () => {\n    this.chiefObj.MAX_YAYS((e, r) => {\n      if (!e) {\n        this.setState({ max_yays: r })\n      }\n    });\n  }\n\n  getValueHatSpell = (field) => {\n    return new Promise((resolve, reject) => {\n      spellContract.at(this.state.hat)[field]((e, r) => {\n        if (!e) {\n          resolve(r);\n        } else {\n          reject(e);\n        }\n      });\n    });\n  }\n\n  getHat = () => {\n    this.chiefObj.hat((e, r) => {\n      if (!e) {\n        this.setState({ hat: r, hatSpell: {} }, () => {\n          const promises = [this.getValueHatSpell('whom'), this.getValueHatSpell('mana'), this.getValueHatSpell('data'), this.getValueHatSpell('done')];\n          Promise.all(promises).then(r2 => {\n            if (web3.isAddress(r2[0])) {\n              Promise.resolve(this.getContractABIFromEtherscan(r2[0])).then(r3 => {\n                const sig = r2[2].substring(0, 10);\n                let abi = [];\n                JSON.parse(r3.result).forEach(value => {\n                  if (this.methodSig(`${value.name}(${value.inputs.map(val => val.type).join(',')})`) === sig) {\n                    abi = value;\n                  }\n                });\n                this.setState({ hatSpell: { 'whom': r2[0], 'mana': r2[1], 'data': r2[2], 'done': r2[3], 'abi': abi } });\n              });\n            }\n          }, e => {});\n        })\n      }\n    });\n  }\n  //\n\n  // Actions\n  loadCustomChief = (e) => {\n    e.preventDefault();\n    const chief = this.chiefAddress.value;\n    if (chief && web3.isAddress(chief)) {\n      try {\n        // Reset form value\n        this.chiefAddress.value = null;\n        window.localStorage.setItem('chief', chief);\n        this.initContract();\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  clearCustomChief = (e) => {\n    window.localStorage.setItem('chief', '');\n    this.initContract();\n  }\n\n  deploy = async (e) => {\n    e.preventDefault();\n    if (this.max_yays.value) {\n      try {\n        const gov = this.govAddress.value && web3.isAddress(this.govAddress.value)\n                    ? this.govAddress.value\n                    : await this.deployToken('0x474f560000000000000000000000000000000000000000000000000000000000'); // symbol = GOV\n        console.log('GOV:', gov);\n        const iou = await this.deployToken('0x494f550000000000000000000000000000000000000000000000000000000000'); // symbol = IOU\n        console.log('IOU:', iou);\n        const chief = await this.deployChief(gov, iou, this.max_yays.value);\n        console.log('Chief:', chief);\n        if (gov && iou && chief && web3.isAddress(gov) && web3.isAddress(iou) && web3.isAddress(chief)) {\n          this.setOwnership(iou, chief);\n          window.localStorage.setItem('chief', chief);\n          // Reset form values\n          this.govAddress.value = null;\n          this.max_yays.value = null;\n          this.initContract();\n        }\n      } catch (e) {\n        console.log(e);\n      }\n    }\n  }\n\n  checkDeployedAddress = (resolve, reject, tx) => {\n    // We need to use an interval as MM with filters are not a good combination\n    this.checkDeployAddress = setInterval(() => {\n      web3.eth.getTransactionReceipt(tx.transactionHash, (e, r) => {\n        if (!e) {\n          if (r && r.contractAddress) {\n            clearInterval(this.checkDeployAddress);\n            this.logTransactionConfirmed(tx.transactionHash);\n            resolve(r.contractAddress);\n          }\n        } else {\n          reject(e);\n        }\n      });\n    }, 5000);\n  }\n\n  deployToken = (symbol) => {\n    return new Promise((resolve, reject) => {\n      const id = Math.random();\n      const title = `deploy: ${web3.toAscii(symbol)}`;\n      this.logRequestTransaction(id, title);\n      tokenContract.new(symbol, { data: dstoken.bytecode, gas: 2000000 }, (e, tx) => {\n        if (!e) {\n          this.logPendingTransaction(id, tx.transactionHash, title);\n          this.checkDeployedAddress(resolve, reject, tx);\n        } else {\n          this.logTransactionRejected(id, title);\n          reject(e);\n        }\n      });\n    })\n  }\n\n  deployChief = (gov, iou, max) => {\n    return new Promise((resolve, reject) => {\n      const id = Math.random();\n      const title = 'deploy: chief';\n      this.logRequestTransaction(id, title);\n      chiefContract.new(gov, iou, max, { data: dschief.bytecode, gas: 2000000 }, (e, tx) => {\n        if (!e) {\n          this.logPendingTransaction(id, tx.transactionHash, title);\n          this.checkDeployedAddress(resolve, reject, tx);\n        } else {\n          this.logTransactionRejected(id, title);\n          reject(e);\n        }\n      });\n    })\n  }\n\n  setOwnership = (iou, chief) => {\n    return new Promise((resolve, reject) => {\n      const id = Math.random();\n      const title = 'IOU setOwner Chief';\n      this.logRequestTransaction(id, title);\n      tokenContract.at(iou).setOwner(chief, (e, tx) => {\n        if (!e) {\n          this.logPendingTransaction(id, tx, title);\n          resolve(tx);\n        } else {\n          reject(e);\n        }\n      });\n    })\n  }\n\n  setAllowance = (e) => {\n    e.preventDefault();\n    const token = e.target.getAttribute('data-token');\n    const value = e.target.getAttribute('data-value');\n    const id = Math.random();\n    const title = `${token} ${value === \"0\" ? 'deny' : 'rely'} chief`;\n    this.logRequestTransaction(id, title);\n    this[`${token}Obj`].approve(this.chiefObj.address, value, (e, tx) => {\n      if (!e) {\n        this.logPendingTransaction(id, tx, title, [`get${token.toUpperCase()}Allowance`]);\n      } else {\n        this.logTransactionRejected(id, title);\n      }\n    });\n    return false;\n  }\n\n  lockFree = (e) => {\n    e.preventDefault();\n    const method = this.methodLF.value;\n    const value = web3.toWei(this.amount.value);\n    if (method === 'lock' && this.state.GOVBalance.lt(value)) {\n      alert('Not enough GOV balance to lock this amount');\n    } else if (method === 'lock' && this.state.GOVAllowance.lt(value)) {\n      alert('Not allowance set for GOV Token');\n    } else if (method === 'free' && this.state.IOUBalance.lt(value)) {\n      alert('Not enough IOU balance (GOV locked) to free this amount');\n    } else if (method === 'free' && this.state.IOUAllowance.lt(value)) {\n      alert('Not allowance set for IOU Token');\n    } else {\n      const id = Math.random();\n      const title = `${method}: ${this.amount.value}`;\n      this.logRequestTransaction(id, title);\n      this.chiefObj[method](value, (e, tx) => {\n        this.logPendingTransaction(id, tx, title, ['reloadBalances']);\n        // Reset form value\n        this.amount.value = null;\n      });\n    }\n    return false;\n  }\n\n  voteSlate = (e) => {\n    e.preventDefault();\n    const slate = e.target.getAttribute('data-slate');\n    const id = Math.random();\n    const title = `vote: ${slate}`;\n    this.logRequestTransaction(id, title);\n    this.chiefObj.vote.bytes32(slate, (e, tx) => {\n      this.logPendingTransaction(id, tx, title, ['reloadVotes']);\n    });\n    return false;\n  }\n\n  createSlate = (e) => {\n    e.preventDefault();\n    const method = this.methodVE.value;\n    const addresses = this.addresses.value.replace(/\\s/g,'').split(',').sort();\n    const id = Math.random();\n    const title = `${method}: ${addresses.join(',')}`;\n    this.logRequestTransaction(id, title);\n    this.chiefObj[method]['address[]'](addresses, (e, tx) => {\n      this.logPendingTransaction(id, tx, title, ['getSlates']);\n      // Reset form value\n      this.addresses.value = null;\n    });\n    return false;\n  }\n\n  liftCandidate = (e) => {\n    e.preventDefault();\n    const address = e.target.getAttribute('data-address');\n    const id = Math.random();\n    const title = `lift: ${address}`;\n    this.logRequestTransaction(id, title);\n    this.chiefObj.lift(address, (e, tx) => {\n      this.logPendingTransaction(id, tx, title, ['getHat']);\n    });\n    return false;\n  }\n  //\n\n  renderChiefData = () => {\n    const hatSpellParams = [];\n    if (this.state.hatSpell.abi) {\n      let i = 0;\n      this.state.hatSpell.abi.inputs.forEach(input => {\n        let val = this.state.hatSpell.data.substring(10 + i * 64, 10 + (i + 1) * 64);\n        switch(input.type) {\n          case 'uint256':\n          case 'uint128':\n          case 'uint64':\n          case 'uint32':\n          case 'uint16':\n          case 'uint8':\n            val = web3.toBigNumber(`0x${val}`).valueOf();\n            break;\n          case 'string':\n            val = web3.toAscii(`0x${val}`);\n            break;\n          case 'address':\n            val = `0x${val.substring(24, 64)}`;\n            break;\n          default:\n            break;\n        }\n        hatSpellParams.push({field: input.name, value: val});\n        i++;\n      });\n    }\n    return(\n      <section>\n        <div className=\"col-md-12\">\n          <div className=\"box\">\n            <div className=\"box-header with-border\">\n                <h3 className=\"box-title\">Balances</h3>\n              </div>\n              <div className=\"box-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <table>\n                      <thead>\n                        <tr>\n                          <th></th>\n                          <th>Balance</th>\n                          <th>Allowance</th>\n                          <th></th>\n                        </tr>\n                      </thead>\n                      <tbody>\n                        <tr>\n                          <td>GOV Balance</td>\n                          <td>\n                            {\n                              this.state.GOVBalance.eq(-1)\n                              ? 'Loading...'\n                              : printNumber(this.state.GOVBalance)\n                            }\n                          </td>\n                          <td>\n                            {\n                              this.state.GOVAllowance.eq(-1) || this.state.GOVBalance.eq(-1)\n                              ? 'Calculating allowance...'\n                              :\n                                this.state.GOVAllowance.eq(web3.toBigNumber(2).pow(256).minus(1)) // uint(-1))\n                                ? 'Approved'\n                                : 'Not Approved'\n                            }\n                          </td>\n                          <td>\n                            {\n                              !this.state.GOVAllowance.eq(-1) && !this.state.GOVBalance.eq(-1) &&\n                              this.state.GOVAllowance.eq(web3.toBigNumber(2).pow(256).minus(1)) // uint(-1))\n                                ? <a href=\"#allowance\" onClick={ this.setAllowance } data-token=\"gov\" data-value=\"0\">Deny</a>\n                                : <a href=\"#allowance\" onClick={ this.setAllowance } data-token=\"gov\" data-value=\"-1\">Rely</a>\n                            }\n                          </td>\n                        </tr>\n                        <tr>\n                          <td>IOU Balance (Locked GOV)</td>\n                          <td>\n                            {\n                              this.state.IOUBalance.eq(-1)\n                              ? 'Loading...'\n                              : printNumber(this.state.IOUBalance)\n                            }\n                          </td>\n                          <td>\n                            {\n                              this.state.IOUAllowance.eq(-1) || this.state.IOUBalance.eq(-1)\n                              ? 'Calculating allowance...'\n                              :\n                                this.state.IOUAllowance.eq(web3.toBigNumber(2).pow(256).minus(1)) // uint(-1))\n                                ? 'Approved'\n                                : 'Not Approved'\n                            }\n                          </td>\n                          <td>\n                            {\n                              !this.state.IOUAllowance.eq(-1) && !this.state.IOUBalance.eq(-1) &&\n                              this.state.IOUAllowance.eq(web3.toBigNumber(2).pow(256).minus(1)) // uint(-1))\n                                ? <a href=\"#allowance\" onClick={ this.setAllowance } data-token=\"iou\" data-value=\"0\">Deny</a>\n                                : <a href=\"#allowance\" onClick={ this.setAllowance } data-token=\"iou\" data-value=\"-1\">Rely</a>\n                            }\n                          </td>\n                        </tr>\n                      </tbody>\n                    </table>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"box\">\n            <div className=\"box-header with-border\">\n                <h3 className=\"box-title\">Lock/Free GOV</h3>\n              </div>\n              <div className=\"box-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <form ref={ (input) => this.lockFreeForm = input } onSubmit={ e => this.lockFree(e) }>\n                      <input ref={ (input) => this.amount = input } type=\"number\" step=\"0.000000000000000001\" placeholder=\"Amount to be locked/freed\" style={ {width: '200px'} }/>\n                      <select ref={ (input) => this.methodLF = input } >\n                        <option value=\"lock\">Lock</option>\n                        <option value=\"free\">Free</option>\n                      </select>\n                      <input type=\"submit\" />\n                    </form>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"box\">\n            <div className=\"box-header with-border\">\n                <h3 className=\"box-title\">Candidates Ranking</h3>\n              </div>\n              <div className=\"box-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <p>Hat: { etherscanAddress(this.state.network.network, this.state.hat, this.state.hat) }</p>\n                    {\n                      Object.keys(this.state.hatSpell).length > 0 &&\n                      <table style={ { marginBottom: '15px' } }>\n                        <tbody>\n                          <tr>\n                            <td>Target</td>\n                            <td>{ etherscanAddress(this.state.network.network, this.state.hatSpell.whom, this.state.hatSpell.whom) }</td>\n                          </tr>\n                          <tr>\n                            <td>Data</td>\n                            <td>\n                              { this.state.hatSpell.data.substring(0, 10) }<br />\n                              { this.state.hatSpell.data.substring(10, this.state.hatSpell.data.length) }\n                            </td>\n                          </tr>\n                          {\n                            this.state.hatSpell.abi &&\n                            <tr>\n                              <td>Sig</td>\n                              <td>\n                                {`${this.state.hatSpell.abi.name}(${this.state.hatSpell.abi.inputs.map(val => `${val.type} ${val.name}`).join(', ')})`}\n                              </td>\n                            </tr>\n                          }\n                          {\n                            hatSpellParams.length > 0 &&\n                            <tr>\n                              <td>Params</td>\n                              <td>\n                                {\n                                  hatSpellParams.map(input =>\n                                    <p key={ input.field }>\n                                      { input.field }: { input.value }\n                                    </p>\n                                  )\n                                }\n                              </td>\n                            </tr>\n                          }\n                          <tr>\n                            <td>Value</td>\n                            <td>{ printNumber(this.state.hatSpell.mana) }</td>\n                          </tr>\n                          <tr>\n                            <td>Executed</td>\n                            <td>{ this.state.hatSpell.done ? 'Yes' : 'No' }</td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    }\n                    {\n                      this.state.loaded\n                      ?\n                        Object.keys(this.state.candidates).length > 0\n                        ?\n                          <table>\n                            <thead>\n                              <tr>\n                                <th>\n                                  Candidate\n                                </th>\n                                <th>\n                                  Weight\n                                </th>\n                                <th>\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                            {\n                              Object.keys(this.state.candidates).sort((a,b) => this.state.candidates[b] - this.state.candidates[a]).map(key =>\n                                <tr key={ key }>\n                                  <td>{ etherscanAddress(this.state.network.network, key, key) }</td>\n                                  <td style={ {textAlign: 'right'} }>{ printNumber(this.state.candidates[key]) }</td>\n                                  <td>{ typeof this.state.candidates[this.state.hat] === 'undefined' || this.state.candidates[key].gt(this.state.candidates[this.state.hat]) ? <a href=\"#lift\" data-address={ key } onClick={ this.liftCandidate }>Lift this candidate</a> : <span style={ {color:'#d2d6de'} }>Lift this candidate</span> }</td>\n                                </tr>\n                              )\n                            }\n                            </tbody>\n                          </table>\n                        :\n                          <div>No candidates...</div>\n                      :\n                        \"Loading...\"\n                    }\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"box\">\n            <div className=\"box-header with-border\">\n                <h3 className=\"box-title\">Slates Created</h3>\n              </div>\n              <div className=\"box-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    {\n                      this.state.loaded\n                      ?\n                        Object.keys(this.state.candidates).length > 0\n                        ?\n                          <table>\n                            <thead>\n                              <tr>\n                                <th>\n                                  Slate\n                                </th>\n                                <th>\n                                  Addresses\n                                </th>\n                                <th>\n                                </th>\n                              </tr>\n                            </thead>\n                            <tbody>\n                              {\n                                Object.keys(this.state.slates).map(key =>\n                                  <tr key={ key }>\n                                    <td>\n                                      <span title={key}>{ key.substring(0,20) }...</span>\n                                    </td>\n                                    <td>\n                                      {\n                                        this.state.slates[key].map(value => <p key={ value }>{ etherscanAddress(this.state.network.network, value, value) }</p>)\n                                      }\n                                    </td>\n                                    <td>\n                                      {\n                                        this.state.myVote === key\n                                        ? 'Voted'\n                                        : <a data-slate={ key } href=\"#vote\" onClick={ this.voteSlate }>Vote this</a>\n                                      }\n                                    </td>\n                                  </tr>\n                                )\n                              }\n                            </tbody>\n                          </table>\n                        :\n                          <div>No slates created...</div>\n                      :\n                        \"Loading...\"\n                    }\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-12\">\n          <div className=\"box\">\n            <div className=\"box-header with-border\">\n                <h3 className=\"box-title\">New slate</h3>\n              </div>\n              <div className=\"box-body\">\n                <div className=\"row\">\n                  <div className=\"col-md-12\">\n                    <form ref={ (input) => this.createSlateForm = input } onSubmit={ e => this.createSlate(e) }>\n                      <input ref={ (input) => this.addresses = input } type=\"text\" placeholder=\"Add addresses (comma separated)\" style={ {width: '200px'} }/>\n                      <select ref={ (input) => this.methodVE = input } >\n                        <option value=\"vote\">Create and vote</option>\n                        <option value=\"etch\">Just create</option>\n                      </select>\n                      <input type=\"submit\" />\n                    </form>\n                  </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n    )\n  }\n\n  render() {\n    return (\n      <div className=\"content-wrapper\">\n        <section className=\"content-header\">\n          <h1>\n            <a href=\"/\" className=\"logo\"><img src={ logo } alt=\"Chief Explorer\" width=\"50\" /> - Chief Explorer</a>\n          </h1>\n        </section>\n        <section className=\"content\">\n          <div>\n            <div className=\"row\">\n              <div className=\"col-md-12\">\n                <div className=\"warning-box\">\n                  <div className=\"warning-text-wrapper\">\n                    <h3 className=\"warning-text\"> \n                      <strong style={{fontWeight: \"bold\"}}> Warning </strong> \n                      <br /> \n                      Potential Risk - This page displays the current MKR weighting of each Governance proposal and has the ability to lock/free user balances, create slates, cast votes, and lift proposal addresses. It should be used at the user's own risk.\n                    </h3>\n                  </div>\n                </div>\n                <div className=\"box\">\n                  <div className=\"box-header with-border\">\n                    <h3 className=\"box-title\">General Info</h3>\n                  </div>\n                  <div className=\"box-body\">\n                    <div className=\"row\">\n                      <div className=\"col-md-6\">\n                        <p>\n                          <strong>Network:</strong> { this.state.network.network }<br />\n                          <strong>Your account:</strong> { etherscanAddress(this.state.network.network, this.state.network.defaultAccount, this.state.network.defaultAccount) }<br />\n                          <strong>Chief:</strong> { etherscanAddress(this.state.network.network, this.state.chief, this.state.chief) }<br />\n                          <strong>GOV Token:</strong> { etherscanToken(this.state.network.network, this.state.gov, this.state.gov) }<br />\n                          <strong>IOU Token:</strong> { etherscanToken(this.state.network.network, this.state.iou, this.state.iou) }<br />\n                          <strong>Max yays:</strong> { this.state.max_yays.eq(-1) ? 'Loading...' : this.state.max_yays.valueOf() }\n                        </p>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              </div>\n              {\n                this.state.network.network !== 'main' &&\n                <div className=\"col-md-6\">\n                  <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                        <h3 className=\"box-title\">Create new Chief</h3>\n                      </div>\n                      <div className=\"box-body\">\n                        <div className=\"row\">\n                          <div className=\"col-md-12\">\n                            <span>\n                              <p>If GOV address remains empty or is not a valid address, it will deploy a test token</p>\n                              <form ref={ input => this.deployForm = input } onSubmit={ e => this.deploy(e) }>\n                                <input ref={ input => this.govAddress = input } name=\"gov\" type=\"text\" placeholder=\"GOV Token Address\" />\n                                <input ref={ input => this.max_yays = input } name=\"max_yays\" type=\"text\" placeholder=\"Max yays\" />\n                                <input type=\"submit\"/>\n                              </form>\n                            </span>\n                          </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              }\n              {\n                this.state.network.network !== 'main' &&\n                <div className=\"col-md-6\">\n                  <div className=\"box\">\n                    <div className=\"box-header with-border\">\n                      <h3 className=\"box-title\">Load { this.state.chief ? 'another ': '' }Chief contract</h3>\n                    </div>\n                    <div className=\"box-body\">\n                      <div className=\"row\">\n                        <div className=\"col-md-12\">\n                          <span>\n                            <form ref={ input => this.loadForm = input } onSubmit={ e => this.loadCustomChief(e) }>\n                              <input ref={ input => this.chiefAddress = input } name=\"chief\" type=\"text\" placeholder=\"Chief address\" />\n                              <input type=\"submit\" />\n                              {\n                                window.localStorage.getItem('chief') &&\n                                <span>\n                                  &nbsp;\n                                  <button type=\"button\" onClick={e => this.clearCustomChief(e)}>Use default contract</button>\n                                </span>\n                              }\n                            </form>\n                          </span>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n              }\n              {\n                this.state.chief\n                ? this.renderChiefData()\n                : ''\n              }\n              <hr />\n              <ReactNotify ref='notificator'/>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","// In production, we register a service worker to serve assets from local cache.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\n// cached resources are updated in the background.\n\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\n// This link also includes instructions on opting out of this behavior.\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport default function register() {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (!isLocalhost) {\n        // Is not local host. Just register service worker\n        registerValidSW(swUrl);\n      } else {\n        // This is running on localhost. Lets check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the old content will have been purged and\n              // the fresh content will have been added to the cache.\n              // It's the perfect time to display a \"New content is\n              // available; please refresh.\" message in your web app.\n              console.log('New content is available; please refresh.');\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      if (\n        response.status === 404 ||\n        response.headers.get('content-type').indexOf('javascript') === -1\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { unregister } from './registerServiceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\nunregister();\n","module.exports = __webpack_public_path__ + \"static/media/makerdao.2854f3a0.svg\";"],"sourceRoot":""}